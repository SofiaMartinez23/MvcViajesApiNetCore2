@model List<Chat>
@{
    ViewData["Title"] = "Chat con usuario";
    Layout = "_Layout";

    // Obtén los datos de los usuarios desde el controlador
    int idUsuarioRemitente = ViewData["IdUsuarioRemitente"] as int? ?? 0;
    int idUsuarioDestinatario = ViewData["IdUsuarioDestinatario"] as int? ?? 0;
}

<style>
    /* Estilos para el chat */
    body {
        background-color: #f0f2f5;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }

    .chat-container-wrapper {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        height: 100vh;
        padding: 20px;
        background-color: #f0f2f5;
    }

    .chat-container-wp {
        width: 500px;
        height: 600px;
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 10px 15px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        position: relative;
    }

    .chat-header {
        background: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);
        color: white;
        padding: 15px;
        text-align: center;
        font-weight: 600;
        font-size: 18px;
    }

    .chat-messages {
        flex-grow: 1;
        padding: 15px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        position: relative;
    }

    .message-bubble {
        max-width: 80%;
        margin-bottom: 10px;
        padding: 10px 15px;
        border-radius: 15px;
        clear: both;
        position: relative;
        font-size: 14px;
    }

    .sent {
        background-color: #1a73e8;
        color: white;
        align-self: flex-end;
        border-bottom-right-radius: 5px;
    }

    .received {
        background-color: #f1f0f0;
        color: black;
        align-self: flex-start;
        border-bottom-left-radius: 5px;
    }

    .message-info {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        font-size: 11px;
        color: rgba(255,255,255,0.7);
        margin-top: 4px;
    }

    .sent .message-info {
        color: rgba(255,255,255,0.7);
    }

    .received .message-info {
        color: rgba(0,0,0,0.5);
    }

    .message-time {
        font-size: 0.7em;
    }

    .input-group-wp {
        display: flex;
        padding: 10px;
        background-color: white;
        border-top: 1px solid #e0e0e0;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        justify-content: center;
        align-items: center;
    }

    .input-group {
        display: flex;
        width: 100%;
        align-items: center;
    }

        .input-group input[type="text"] {
            flex-grow: 1;
            padding: 10px 15px;
            border: none;
            border-radius: 20px;
            background-color: #f1f0f0;
            margin-right: 10px;
            font-size: 14px;
        }

        .input-group button {
            background-color: transparent;
            border: none;
            padding: 0;
            cursor: pointer;
        }

            .input-group button img {
                width: 40px;
                height: 40px;
            }

    .no-comments {
        text-align: center;
        padding: 40px;
        color: #777;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>

<div class="chat-container-wrapper">
    <div class="chat-container-wp">
        <div class="chat-header">
            Chat con Usuario
        </div>
        <div class="chat-messages" id="messagesList">
            @if (Model != null && Model.Count > 0)
            {
                @foreach (var mensaje in Model)
                {
                    <div class="message-bubble @(mensaje.IdUsuarioRemitente == idUsuarioRemitente ? "sent" : "received")" data-mensaje-id="@mensaje.IdMensaje">
                        <div class="message-info">
                            <span class="message-time">@mensaje.FechaEnvio.ToString("HH:mm")</span>
                        </div>
                        @mensaje.Mensaje
                    </div>
                }
            }
            else
            {
                <div class="no-comments">
                    <p>No hay mensajes disponibles.</p>
                    <small>¡Sé el primero en enviar un mensaje!</small>
                </div>
            }
        </div>

        <div class="input-group-wp">
            <form id="chatForm" method="post" asp-controller="Usuarios" asp-action="InsertMensajeChat">
                <input type="hidden" name="idusuario" value="@idUsuarioRemitente" />
                <input type="hidden" name="userDestinatario" value="@idUsuarioDestinatario" />
                <div class="input-group">
                    <input type="text" id="messageInput" name="mensaje" placeholder="Escribe un mensaje..." required />
                    <button type="submit" class="btn-send">
                        <img src="https://images.icon-icons.com/1880/PNG/512/iconfinder-send-4341325_120524.png" alt="Enviar" />
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function() {
        $('#chatForm').submit(function(e) {
            e.preventDefault();

            var message = $('#messageInput').val().trim();
            if (message) {
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        var newMessage = $(response).find('.message-bubble').last();
                        $('#messagesList').append(newMessage);
                        $('#messageInput').val('');
                        var chatContainer = document.querySelector('.chat-container-wp');
                        chatContainer.scrollTop = chatContainer.scrollHeight;
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Error',
                            text: 'No se pudo enviar el mensaje. Intenta de nuevo más tarde',
                            icon: 'error',
                            confirmButtonColor: '#dc3545'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Mensaje vacío',
                    text: 'Por favor, escribe un mensaje antes de enviarlo.',
                    icon: 'warning',
                    confirmButtonColor: '#6c757d'
                });
            }
        });

        var chatContainer = document.querySelector('.chat-container-wp');
        if (chatContainer) {
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }
    });
</script>
